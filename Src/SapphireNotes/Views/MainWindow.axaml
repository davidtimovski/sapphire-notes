<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:SapphireNotes.ViewModels;assembly=SapphireNotes"
        xmlns:be="clr-namespace:SapphireNotes.Behaviors"
        xmlns:local="clr-namespace:SapphireNotes.UserControls"
        mc:Ignorable="d"
        x:Class="SapphireNotes.Views.MainWindow"
        Title="Sapphire Notes">

  <Window.Styles>
    <Style Selector="Window">
      <Setter Property="SizeToContent" Value="Manual" />
      <Setter Property="Padding" Value="5" />
    </Style>

    <Style Selector="DockPanel.toolbar">
      <Setter Property="Margin" Value="0 0 0 5" />
    </Style>
    <Style Selector="DockPanel.toolbar Menu">
      <Setter Property="Padding" Value="0 0 0 5" />
      <Setter Property="DockPanel.Dock" Value="Top" />
    </Style>
    
    <Style Selector="TextBlock.introMessage">
      <Setter Property="HorizontalAlignment" Value="Center"></Setter>
      <Setter Property="VerticalAlignment" Value="Center"></Setter>
      <Setter Property="FontSize" Value="20"></Setter>
    </Style>

    <Style Selector="TabControl[TabStripPlacement=Top]">
      <Setter Property="Padding" Value="0 0 0 0"/>
    </Style>
    <Style Selector="TabItem">
      <Setter Property="Padding" Value="0" />
      <Setter Property="Margin" Value="0 0 3 3" />
    </Style>
	<Style Selector="TabItem Border.tabHeader">
	  <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
	  <Setter Property="Padding" Value="8 5" />
	</Style>
	<Style Selector="TabItem:pointerover Border.tabHeader">
	  <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
	</Style>
	<Style Selector="TabItem:selected Border.tabHeader">
	  <Setter Property="Background" Value="{DynamicResource ButtonPrimaryBackground}" />
	</Style>
	<Style Selector="TabItem Border.tabHeader TextBlock">
	  <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
	  <Setter Property="FontSize" Value="{StaticResource FontSize}" />
	</Style>
	<Style Selector="TabItem:selected Border.tabHeader TextBlock">
	  <Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryForeground}" />
	</Style>

	<Style Selector="Border.editorContainer">
	  <Setter Property="Background" Value="{DynamicResource EditorContainerBorderBackground}" />
	</Style>
  </Window.Styles>

  <Design.DataContext>
    <vm:MainWindowViewModel/>
  </Design.DataContext>

  <Grid RowDefinitions="Auto,1*">

    <DockPanel Grid.Row="0" Classes="toolbar">
      <Button Command="{Binding CtrlW}" HotKey="Ctrl+W" IsVisible="False"></Button>
      <Button Command="{Binding CtrlE}" HotKey="Ctrl+E" IsVisible="False"></Button>
      <Button Name="escapeButton" HotKey="Escape" IsVisible="False"></Button>
      
      <Menu>
        <MenuItem Header="Notes">
          <MenuItem Name="newNoteMenuItem" Header="New                     (Ctrl+N)" HotKey="Ctrl+N" />
          <MenuItem Name="quickNoteMenuItem" Header="Quick                   (Ctrl+Q)" HotKey="Ctrl+Q" />
          <Separator/>
          <MenuItem Name="archivedMenuItem" Header="Archived              (Ctrl+R)" HotKey="Ctrl+R" />
          <Separator />
          <MenuItem Name="preferencesMenuItem" Header="Preferences        (Ctrl+P)" HotKey="Ctrl+P" />
        </MenuItem>
        <MenuItem Header="Help">
          <MenuItem Name="tipsMenuItem" Header="Tips" />
          <Separator />
          <MenuItem Name="aboutMenuItem" Header="About" />
        </MenuItem>
      </Menu>
    </DockPanel>
    
    <TextBlock IsVisible="{Binding ShowIntroMessage}" Classes="introMessage" Grid.Row="1">Ctrl+N to create a new note</TextBlock>
    
    <TabControl Items="{Binding Notes}" SelectedItem="{Binding Selected}" SelectedIndex="{Binding SelectedIndex}" Grid.Row="1">
      <TabControl.ItemTemplate>
        <DataTemplate>
          <Border be:MiddleClickBehavior.Command="{Binding OnMiddleClickCommand}" Classes="tabHeader">
            <Border.ContextMenu>
              <ContextMenu>
                <MenuItem
                  Header="Edit"
                  Command="{Binding OnEditCommand}" />
                <MenuItem
                  Header="Archive"
                  Command="{Binding OnArchiveCommand}" />
                <MenuItem
                  Header="Delete"
                  Command="{Binding OnDeleteCommand}" />
              </ContextMenu>
            </Border.ContextMenu>

            <TextBlock Text="{Binding Name}" />
          </Border>
        </DataTemplate>
      </TabControl.ItemTemplate>

      <TabControl.ContentTemplate>
        <DataTemplate>
          <local:NoteTab DataContext="{Binding}" />
        </DataTemplate>
      </TabControl.ContentTemplate>
    </TabControl>
    
  </Grid>

</Window>
